services:
  # Your existing services (db, redis, web)
  db:
    image: postgres:15.12
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JUDGE0_DB: ${JUDGE0_DB}
      JUDGE0_USER: ${JUDGE0_USER}
      JUDGE0_PASSWORD: ${JUDGE0_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - data:/var/lib/postgresql/data/
      - ./postgres-init:/docker-entrypoint-initdb.d
  redis:
    image: redis:7.4.2
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      JWT_ACCESS_TOKEN_EXPIRY: ${JWT_ACCESS_TOKEN_EXPIRY}
      JWT_REFRESH_TOKEN_EXPIRY: ${JWT_REFRESH_TOKEN_EXPIRY}
      API_BASE_URL: ${API_BASE_URL}
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JUDGE0_DB_URL: ${JUDGE0_DB_URL}
      JUDGE0_DB: ${JUDGE0_DB}
      JUDGE0_PASSWORD: ${JUDGE0_PASSWORD}
      JUDGE0_USER: ${JUDGE0_USER}
      JUDGE0_AUTH_TOKEN: ${JUDGE0_AUTH_TOKEN}
      JUDGE0_URL: ${JUDGE0_URL}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  judge0-server:
    image: judge0/judge0:1.13.1
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    ports:
      - "2358:2358"
    privileged: true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  judge0-workers:
    image: judge0/judge0:1.13.1
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    command: ["./scripts/workers"]
    privileged: true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

volumes:
  data: